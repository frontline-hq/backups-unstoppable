# helmfile.yaml
environments:
    default:
        values:
        {{- range $index, $item := readDirEntries "./vars/test/" }}
        {{- if $item.IsDir }}
        - {{ $item.Name }}:
            sftp:
                host_pubkey: "ref+file://vars/test/{{ $item.Name }}/host_id_ed25519.pub"
                host_privkey: "ref+file://vars/test/{{ $item.Name }}/host_id_ed25519"
                user_pubkey: "ref+file://vars/test/{{ $item.Name }}/user_id_ed25519.pub"
                user_privkey: "ref+file://vars/test/{{ $item.Name }}/user_id_ed25519"
                host: "ref+file://vars/test/{{ $item.Name }}/secrets.yaml#/sftp_host"
                port: "ref+file://vars/test/{{ $item.Name }}/secrets.yaml#/sftp_port"
                user: "ref+file://vars/test/{{ $item.Name }}/secrets.yaml#/sftp_user"
                mount_path_in_docker: "ref+file://vars/test/{{ $item.Name }}/secrets.yaml#/sftp_mount_path_in_docker"
            remote:
                endpoint: "ref+file://vars/test/{{ $item.Name }}/secrets.yaml#/remote_endpoint"
                bucket_name: "ref+file://vars/test/{{ $item.Name }}/remote_bucket_name"
                path: "ref+file://vars/test/{{ $item.Name }}/secrets.yaml#/remote_path"
                access_key_id: "ref+file://vars/test/{{ $item.Name }}/secrets.yaml#/remote_access_key_id"
                secret_access_key: "ref+file://vars/test/{{ $item.Name }}/secrets.yaml#/remote_secret_access_key"
            rustic:
                encryption_password: "ref+file://vars/test/{{ $item.Name }}/secrets.yaml#/rustic_encryption_password"
        {{- end }}
        {{- end }}
    production:
        values:
            - ./rustic/values/backups.yaml
---
# Build rustic docker image
hooks:
  - events: ["prepare"]
    showlogs: true
    command: "docker"
    args:
      - "build"
      - "-t"
      - "rustic-backup:latest"
      - "-f"
      - "./rustic/src/Dockerfile"
      - "./rustic/src"
# Repositories for Helm charts
repositories:
    - name: openebs
      url: https://openebs.github.io/openebs
    # community version of minio
    - name: minio
      url: https://charts.min.io/
    - name: emberstack
      url: https://emberstack.github.io/helm-charts

releases:
    - name: openebs
      namespace: openebs
      chart: openebs/openebs
      version: ^4.1.2 # Specify the desired version of OpenEBS
      createNamespace: true
      wait: true
      hooks:
          - events: ["presync"]
            showlogs: true
            command: "sh"
            args:
                - "-c"
                - "kubectl create namespace openebs --dry-run=client -o yaml | kubectl apply -f -"
          - events: ["presync"]
            showlogs: true
            command: "kubectl"
            args:
                - patch
                - namespace
                - openebs
                - -p
                - '{"metadata": {"labels":{"pod-security.kubernetes.io/enforce": "privileged"}}}'
      set:
          - name: engines.replicated.mayastor.enabled
            value: false
      values:
          - zfs-localpv:
                enabled: false
    {{- range $key, $value := .Values }}
    - name: sftp-storage-{{ $key }}
      namespace: sftp
      chart: "./storage"
      version: "0.1.0"
      createNamespace: true
      hooks:
        - events: ["presync"]
          showlogs: true
          command: "/bin/bash"
          args:
            - "./talos-storage-patch.sh"
        - events: ["presync"]
          showlogs: true
          command: "/bin/bash"
          args:
            - "./storage/scripts/release-pv-claims.sh"
            - "local-openebs-hostpath-sftp-{{ $key }}"
      needs:
        - openebs/openebs
      set:
        - name: name
          value: {{ $key }}
        - name: service
          value: sftp

    - name: sftp-{{ $key }}
      namespace: sftp
      chart: emberstack/sftp
      version: ^5.1.71
      createNamespace: true
      needs:
        - sftp/sftp-storage-{{ $key }}
      values:
        - configuration:
            Global:
              Chroot:
                Directory: "%h"
                StartPath: sftp
              Directories:
                - sftp
              HostKeys:
                Ed25519: {{ $value.sftp.host_privkey | quote }}
            Users:
              - Username: "user"
                PublicKeys:
                  - {{ $value.sftp.user_pubkey | quote }}
                Chroot:
                  Directories: "sftp"
        - storage:
            volumes:
              - name: "sftp-storage"
                persistentVolumeClaim:
                  claimName: "sftp-{{ $key }}-local-pvc"
            volumeMounts:
              - name: "sftp-storage"
                mountPath: "/home/user/sftp"
        - service:
            type: ClusterIP
            ports:
                - port: 22
    - name: minio-storage-{{ $key }}
      namespace: minio
      chart: "./storage"
      version: "0.1.0"
      createNamespace: true
      hooks:
        - events: ["presync"]
          showlogs: true
          command: "/bin/bash"
          args:
            - "./talos-storage-patch.sh"
        - events: ["presync"]
          showlogs: true
          command: "/bin/bash"
          args:
            - "./storage/scripts/release-pv-claims.sh"
            - "local-openebs-hostpath-minio-{{ $key }}"
      needs:
        - openebs/openebs
      set:
        - name: name
          value: {{ $key }}
        - name: service
          value: minio
    - name: minio-{{ $key }}
      namespace: minio
      chart: minio/minio
      version: ^5.4.0
      createNamespace: true
      wait: true
      needs:
          - minio/minio-storage-{{ $key }}
      values:
          - service:
                type: ClusterIP
          - resources:
                requests:
                    memory: 512Mi
          - replicas: 1
          - persistence:
                existingClaim: minio-{{ $key }}-local-pvc
          - mode: standalone
          - rootUser: rootuser
          - rootPassword: rootpass123
          - policies:
              - name: fullAccessTestBucket
                statements:
                  - effect: Allow
                    resources:
                      - "arn:aws:s3:::test"
                      - "arn:aws:s3:::test/*"
                    actions:
                      - "s3:*"
          - users:
              - accessKey: {{ $value.remote.access_key_id }}
                secretKey: {{ $value.remote.secret_access_key }}
                policy: fullAccessTestBucket
          - buckets:
                - name: "test"
      hooks:
          - events: ["postsync"]
            showlogs: true
            command: "sh"
            args:
                - "-c"
                - "echo 'MinIO is available at http://<node-ip>:32000'"
          - events: ["postsync"]
            showlogs: true
            command: "sh"
            args:
                - "-c"
                - "kubectl port-forward -n minio svc/minio-{{ $key }}-console 9001:9001 > /dev/null 2>&1 &"
    {{- end }}
